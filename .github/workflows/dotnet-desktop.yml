name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: BorderlessGaming.sln
      Test_Project_Path: BorderlessGaming.Tests\BorderlessGaming.Tests.csproj
      Wap_Project_Directory: BorderlessGaming.Package
      Wap_Project_Path: BorderlessGaming.Package\BorderlessGaming.Package.wapproj

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install .NET Core
    - name: Install .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Set up MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    # Run unit tests
    - name: Run unit tests
      run: dotnet test

    # Restore the application (this step ensures the obj folder is populated)
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Decode the PFX certificate from base64
    - name: Decode and save the pfx certificate
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificateDirectory = Join-Path -Path $env:Wap_Project_Directory -ChildPath "Certificates"
        
        # Create the directory if it doesn't exist
        if (-not (Test-Path -Path $certificateDirectory)) {
            New-Item -ItemType Directory -Path $certificateDirectory
        }

        $certificatePath = Join-Path -Path $certificateDirectory -ChildPath "GitHubActionsWorkflow.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # Build and package the app
    - name: Create the app package
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=$env:Wap_Project_Directory\Certificates\GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    # Clean up the PFX file after the build
    - name: Clean up the pfx certificate
      run: Remove-Item -path $env:Wap_Project_Directory\Certificates\GitHubActionsWorkflow.pfx

    # Upload the MSIX package
    - name: Upload MSIX build artifact
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
